package com.mytijian.mediator.report.DAO;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.mytijian.mediator.api.dto.SyncExamReportDto;
import com.mytijian.mediator.report.params.QuerySyncReportParam;

@Repository("syncExamReportMapper")
public interface SyncExamReportMapper {
	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	int insert(SyncExamReportDto record);

	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	SyncExamReportDto selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	int updateByPrimaryKeySelective(SyncExamReportDto record);

	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	int updateByPrimaryKeyWithBLOBs(SyncExamReportDto record);

	/**
	 * This method was generated by MyBatis Generator.
	 * This method corresponds to the database table tb_sync_exam_report
	 *
	 * @mbggenerated Mon Aug 15 11:35:35 CST 2016
	 */
	int updateByPrimaryKey(SyncExamReportDto record);

	/**
	 * 获取id列表
	 * @param queryParam
	 * @param offset
	 * @param size
	 * @return
	 */
	List<Long> selectSyncExamReportIdList(@Param(value = "queryParam") QuerySyncReportParam queryParam,
			@Param(value = "offset") Long offset, @Param(value = "size") Integer size);
	
	List<SyncExamReportDto> getSyncExamReports(@Param("hospitalId") Integer hospitalId,
			@Param("state") String state, @Param("startIndex") Integer startIndex, @Param("pageSize") Integer pageSize);
	
	void delDoneSyncExamReport(@Param(value = "examReportId") Long examReportId,
			@Param(value = "reportNo") String reportNo, @Param(value = "hospitalId") Integer hospitalId);
	
	/**
	 * 批量更新体检报告同步状态
	 * @param ids
	 * @param status
	 */
	void updateStatusBatchByIds(@Param(value = "ids") List<Long> ids, @Param(value = "status")  String status);
	
	/**
	 * 根据主键批量删除
	 * @param id
	 */
	void deleteBatchByIds(@Param(value = "ids") List<Long> ids);
	
	List<SyncExamReportDto> getSyncExamReportsByStartIndex(@Param("hospitalId") Integer hospitalId,
			@Param("startIndex") Integer startIndex, @Param("pageSize") Integer pageSize);
	
	/**
	 * 获取当前最大id
	 * @return
	 */
	Integer selectMaxId();
	
	/**
	 * 删除同步完成的N天前的体检报告
	 */
	void deleteDoneExamReportWithNDaysAgo(@Param("date") Date date);
}